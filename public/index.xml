<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://www.lovefive.club/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 12 Mar 2021 09:04:43 +0800</lastBuildDate><atom:link href="http://www.lovefive.club/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>实用网站推荐</title>
      <link>http://www.lovefive.club/post/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Thu, 14 Feb 2019 12:00:11 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/</guid>
      <description>QHQ-【问题描述】实用网站推荐！！!（word优美代码、图片格式化转换、图片壁纸、图片在线压缩、经纬度转换及定位、代码格式化Online、国外身份生成、临时手机号、临时邮箱等等)
  如有不可用或失效，请留言联系，第一时间给予回复解决！
一个刚上路的小菜鸟！
    名称 链接 个人喜爱级别     AI智能图片放大 🔗 ⭐⭐⭐⭐⭐   word填入优美代码 🔗 ⭐⭐⭐⭐⭐   代码格式化online 🔗 ⭐⭐⭐⭐⭐   图片格式转换 🔗 ⭐⭐⭐⭐⭐   MSND，我告诉你 🔗 ⭐⭐⭐⭐⭐   图片壁纸 🔗；🔗🔗；🔗 ⭐⭐⭐⭐⭐   谷歌图片压缩 🔗 ⭐⭐⭐⭐⭐   图片在线换底色 🔗；🔗 ⭐⭐⭐⭐⭐   数据结构可视化 🔗 ⭐⭐⭐⭐⭐   EXIF信息查看 🔗 ⭐⭐⭐⭐⭐   经纬度转换及定位 🔗 ⭐⭐⭐⭐⭐   文档比较 🔗 ⭐⭐⭐⭐⭐   新型肺炎数据(实时更新) 🔗 ⭐⭐⭐⭐⭐   太鼓达人 🔗 ⭐⭐⭐⭐⭐   国外个人身份生成 🔗 ⭐⭐⭐⭐⭐   临时手机验证码 🔗 ⭐⭐⭐⭐⭐   临时邮箱验证码 🔗 ⭐⭐⭐⭐⭐   临时邮箱(推荐） 🔗 ⭐⭐⭐⭐⭐   AI捏人 🔗 ⭐⭐⭐⭐⭐   PPT模板 🔗；🔗 ⭐⭐⭐⭐⭐   默沙东手册 🔗 ⭐⭐⭐⭐⭐   词云 🔗 ⭐⭐⭐⭐⭐   中国慕课 🔗 ⭐⭐⭐⭐⭐   Everything搜索下载 🔗 ⭐⭐⭐⭐   大像素 🔗 ⭐⭐⭐⭐   emm 🔗 ⭐⭐⭐⭐   全网热门 🔗 ⭐⭐⭐⭐   IPIP/Ping查询 🔗 ⭐⭐⭐⭐   全历史 🔗 ⭐⭐⭐⭐   图片动漫画 🔗 ⭐⭐⭐⭐   云图片(自画) 🔗 ⭐⭐⭐   查询展会 🔗 ⭐⭐⭐   背景素材 🔗 ⭐⭐⭐   做(学)音乐 🔗 ⭐⭐⭐   新媒体导航 🔗 ⭐⭐⭐   老照片上色 🔗 ⭐⭐⭐   yes/no 🔗 ⭐⭐⭐   整数数列搜索 🔗 ⭐⭐⭐   数据表 🔗 ⭐⭐⭐   中国地图 🔗 ⭐⭐⭐   解谜游戏 🔗 ⭐⭐⭐   大佬网站 🔗 ⭐⭐⭐   人类测试 🔗 ⭐⭐   探月了解 🔗 ⭐⭐   音乐分轨 🔗 ⭐⭐   猫 🔗 ⭐   反人类UI 🔗 ⭐   物流 🔗 ⭐   地球时间 🔗 ⭐    </description>
    </item>
    
    <item>
      <title>Gallery</title>
      <link>http://www.lovefive.club/post/gallery/</link>
      <pubDate>Fri, 12 Mar 2021 09:04:43 +0800</pubDate>
      
      <guid>http://www.lovefive.club/post/gallery/</guid>
      <description>QHQ-【问题描述】Gallery ————宅男福利！ Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ XI XII</description>
    </item>
    
    <item>
      <title>Git常见错误</title>
      <link>http://www.lovefive.club/post/git%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</link>
      <pubDate>Wed, 10 Mar 2021 11:19:15 +0800</pubDate>
      
      <guid>http://www.lovefive.club/post/git%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/</guid>
      <description>QHQ-【问题描述】Git————常见错误（error10051、Timed out、some refs to、Empty reply from server http等.)
一、fatal: unable to access &amp;lsquo;https://github.com/baer9/baer9.github.io.git/&#39;: OpenSSL SSL_read: Connection was reset, errno 10054 解除ssl验证  解决：关闭验证 git config &amp;ndash;global http.sslVerify &amp;ldquo;false&amp;rdquo;  二、fatal: unable to access &amp;lsquo;https://github.com/baer9/baer9.github.io.git/&#39;: Failed to connect to github.com port 443: Timed out 文件可能太大  解决：git config http.postBuffer 524288000  三、 ! [rejected] main -&amp;gt; main (fetch first)error: failed to push some refs to &amp;lsquo;https://github.com/baer9/baer9.github.io.git&#39; 远端比本地多文件（可能是多一个README.md文件)  解决：git pull &amp;ndash;rebase origin main 【注：pull=fetch+merge]  四、fatal: unable to access &amp;lsquo;https://github.</description>
    </item>
    
    <item>
      <title>幸会-1988</title>
      <link>http://www.lovefive.club/post/%E5%B9%B8%E4%BC%9A-1988/</link>
      <pubDate>Mon, 21 Dec 2020 21:27:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%B9%B8%E4%BC%9A-1988/</guid>
      <description>QHQ-【问题描述】1988—————冬日里的温暖伴侣，区别去国家地域，人情与友情世界通用！（会有一点剧透，请小心食用！）
我会再回来的-1988！   双门洞五个家庭：   成东日、李一花：成宝拉、成德善、成晚霞； 金成钧、罗美兰：金正峰、金正焕； 金善英（单亲妈妈）：成善宇、珍珠； 崔吉东（单亲爸爸）：崔泽； 刘在明、赵秀艳：刘大龙、刘东龙。     双门洞五人帮：成德善（特工队）、金正焕（正八、狗焕）、成善宇、崔泽（围棋少年）、刘东龙（娃娃鱼）。    不说国家与文化，就是人与人生活都是类似，总能在点点滴滴中寻找到共鸣，不得不说这个就是此剧我认为的最大感触。细节，人物，感情，场景及剧情让人无话可说，被安利的明明白白，很喜欢！
 经过舍友的两年安利，加上许多人的推荐，我终于食完这顿美食。 《请回答1988》是一部很适合在冬天看的韩剧，因为它会带给人们冬日里的温暖！ 我也在冬日结束春色已露的时间看的，期间的哭哭笑笑已成常规。 《请回答1988》的配乐真的引人入胜，甚至可以称得上“神级配乐”。主题曲《惠化洞》和多次用到的《青春》等歌曲，虽说这些歌的年龄都比我大，但好听的音乐经久流传。   “音乐一响起，眼前就浮现孩子们嬉戏打闹，逐渐成长，离开双门洞，但始终不离不弃，一旦有机会就还是聚在一起的画面。一起在阿泽房间玩耍，一起去海边找离家出走的东龙，一起度过的那些美好青春。”
会剧透，请小心食用！ 在此只写下阿泽，德善和狗焕。  演德善的演员李惠利在采访中说:同样一件事情，如果是正焕或者东龙做了，德善会很生气甚至去打他们，但是阿泽不一样，如果是阿泽做了，德善会感到很难过。
   其实阿泽在德善心中本来就是不同的存在,加上阿泽爱的坚定果断，就已然注定了结果。    看完之后才知道的，一切的结果都是有原因的。铺垫先行告诉我们，狗焕会错过德善。
 那天狗焕看到娃娃鱼被学校混混欺负，他站在身后纠结到底怎么解救娃娃鱼时，被恶霸发现，最后自己也被讹掉一双运动鞋。    都这时候了，还不告白，不亏德善跟阿泽跑了。   电视剧里的德善和阿泽在一起了，没有和狗焕在一起，也是人物本身性格和经历所导致，但人人希望的事物都是美好的，都想近乎完美的，所以尽管剧情里面德善和阿泽在一起了，但现实生活中，德善可是狗焕的女朋友。嘿嘿，这就是缘分和天意吧。 但就剧中的认为设定，德善和阿泽在一起也算是最正确的选择与结果，可惜的是，没有看见他们俩的盛大婚礼！
 </description>
    </item>
    
    <item>
      <title>网页版Github更改文件夹名</title>
      <link>http://www.lovefive.club/post/%E7%BD%91%E9%A1%B5%E7%89%88github%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D/</link>
      <pubDate>Mon, 21 Dec 2020 21:27:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E7%BD%91%E9%A1%B5%E7%89%88github%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D/</guid>
      <description>1.首先打开想要更改的文件夹，直到底层一个文件打开，然后点击编辑； 2.在文件名编辑框按删除键，回到了上一目录； 👇 3.在重命名之后，直接加入/即🆗！ 注意：最后一定要commit changes</description>
    </item>
    
    <item>
      <title>【转载】关于三次握手，四次挥手！</title>
      <link>http://www.lovefive.club/post/%E8%BD%AC%E8%BD%BD%E5%85%B3%E4%BA%8E%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/</link>
      <pubDate>Mon, 21 Dec 2020 13:53:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E8%BD%AC%E8%BD%BD%E5%85%B3%E4%BA%8E%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/</guid>
      <description>关于三次握手，四次挥手！  为什么连接的时候是三次握手？ 什么是半连接队列？ ISN(Initial Sequence Number)是固定的吗？ 三次握手过程中可以携带数据吗？ 如果第三次握手丢失了，客户端服务端会如何处理？ SYN攻击是什么？ 挥手为什么需要四次？ 四次挥手释放连接时，等待2MSL的意义?  1. 三次握手 三次握手（Three-way Handshake）其实就是指建立一个TCP连接时，需要客户端和服务器总共发送3个包。进行三次握手的主要作用就是为了确认双方的接收能力和发送能力是否正常、指定自己的初始化序列号为后面的可靠性传送做准备。实质上其实就是连接服务器指定端口，建立TCP连接，并同步连接双方的序列号和确认号，交换TCP窗口大小信息。
刚开始客户端处于 Closed 的状态，服务端处于 Listen 状态。
进行三次握手：
第一次握手：客户端给服务端发一个 SYN 报文，并指明客户端的初始化序列号 ISN©。此时客户端处于 SYN_SEND 状态。
首部的同步位SYN=1，初始序号seq=x，SYN=1的报文段不能携带数据，但要消耗掉一个序号。
第二次握手：服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，并且也是指定了自己的初始化序列号 ISN(s)。同时会把客户端的 ISN + 1 作为ACK 的值，表示自己已经收到了客户端的 SYN，此时服务器处于 SYN_REVD 的状态。
在确认报文段中SYN=1，ACK=1，确认号ack=x+1，初始序号seq=y。
第三次握手：客户端收到 SYN 报文之后，会发送一个 ACK 报文，当然，也是一样把服务器的 ISN + 1 作为 ACK 的值，表示已经收到了服务端的 SYN 报文，此时客户端处于 ESTABLISHED 状态。服务器收到 ACK 报文之后，也处于 ESTABLISHED 状态，此时，双方已建立起了连接。
确认报文段ACK=1，确认号ack=y+1，序号seq=x+1（初始为seq=x，第二个报文段所以要+1），ACK报文段可以携带数据，不携带数据则不消耗序号。
发送第一个SYN的一端将执行主动打开（active open），接收这个SYN并发回下一个SYN的另一端执行被动打开（passive open）。
在socket编程中，客户端执行connect()时，将触发三次握手。 1.1 为什么需要三次握手，两次不行吗？ 弄清这个问题，我们需要先弄明白三次握手的目的是什么，能不能只用两次握手来达到同样的目的。</description>
    </item>
    
    <item>
      <title>Bat批量修改文件名</title>
      <link>http://www.lovefive.club/post/bat%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D/</link>
      <pubDate>Mon, 14 Dec 2020 16:56:32 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/bat%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8D/</guid>
      <description>1、新建文本文档  写入dir*.*/b &amp;gt;file.csv 保存并更改为bat文件。
 2、打开 file.csv 表格  复制第一列文件名到第二列，选择第二列全部内容，CTRL+F替换想换的内容，在这是直接去除字符。   如只想要其中的英文、汉字或数字可以移步第五步。
 3、写入公式  用公式生成重命名的批处理命令 =&amp;ldquo;ren &amp;ldquo;&amp;amp;A2&amp;amp;&amp;rdquo; &amp;ldquo;&amp;amp;B2 在存放文件的文件夹内新建一个记事本，将批处理命令粘贴到记事本，保存。 将后缀名txt修改为bat，双击 注意：ren后面有一个空格，不要漏掉 如果文件名中有空格，需要在公式中的文件名前后再加上一对半角引号，例如： =&amp;ldquo;ren &amp;ldquo;&amp;quot;&amp;quot;&amp;amp;A2&amp;amp;&amp;rdquo;&amp;rdquo;&amp;rdquo; &amp;ldquo;&amp;quot;&amp;quot;&amp;amp;B2&amp;amp;&amp;rdquo;&amp;rdquo;&amp;quot;&amp;quot; 可以选择直接使用这个！ 然后拖动公式应用整列，制作成下面的表格：  4、新建bat文件，一键完成  复制第三列全面内容，与第一步相同，只需把第一步内容变更为复制内容即可。  5、除去其中的数字  做完以上的步骤，感觉文件名中还存有数字看着也不是很舒服，所有就多加一步除去其中的数字，因为文件名中的数字是随机的，所有就不能用查找替换了，但Excel里有一个CTRL+E快速填充。 在第三列插入一列，以方便提取第二列的关键字。然后输入英文、汉字或数字其中一种，再用CTRL+E快速填充这一列。 图片来源请点击 然后转入第三步。
 另一种方法  选择除去特定字符串，一步搞定
 @echo off Setlocal Enabledelayedexpansion set &amp;quot;str=需要除去的特定字符串&amp;quot; for /f &amp;quot;delims=&amp;quot; %%i in (&#39;dir /b *.*&#39;) do ( set &amp;quot;var=%%i&amp;quot; &amp;amp; ren &amp;quot;%%i&amp;quot; &amp;quot;!var:%str%=!&amp;quot;) 如：除去所有文件名中含有704的字符串(去除汉字和英文也OK!) </description>
    </item>
    
    <item>
      <title>【转载补充】48个实用的HTML特效代码！！！（推荐初学者使用）</title>
      <link>http://www.lovefive.club/post/%E8%BD%AC%E8%BD%BD%E8%A1%A5%E5%85%8548%E4%B8%AA%E5%AE%9E%E7%94%A8%E7%9A%84html%E7%89%B9%E6%95%88%E4%BB%A3%E7%A0%81%E6%8E%A8%E8%8D%90%E5%88%9D%E5%AD%A6%E8%80%85%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 20 Nov 2020 16:48:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E8%BD%AC%E8%BD%BD%E8%A1%A5%E5%85%8548%E4%B8%AA%E5%AE%9E%E7%94%A8%E7%9A%84html%E7%89%B9%E6%95%88%E4%BB%A3%E7%A0%81%E6%8E%A8%E8%8D%90%E5%88%9D%E5%AD%A6%E8%80%85%E4%BD%BF%E7%94%A8/</guid>
      <description>1.忽视右键
&amp;lt;body&amp;gt; 或 &amp;lt;body style=&amp;quot;overflow-y:hidden&amp;quot;&amp;gt; 2.加入背景音乐
　IE:&amp;lt;bgsound src=&amp;quot;*.mid&amp;quot; loop=infinite&amp;gt; NS:&amp;lt;embed src=&amp;quot;*.mid&amp;quot; autostart=true hidden=true loop=true&amp;gt; &amp;lt;/embed&amp;gt; *.mid你的背景音乐的midi格式文件 3.简单的window.open方法
　&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;文字或图片&amp;lt;/a&amp;gt; 参数解释： &amp;lt;SCRIPT LANGUAGE=&amp;quot;javascript&amp;quot;&amp;gt; js脚本开始； window.open 弹出新窗口的命令； 文件路径/文件名 弹出窗口的文件名； newwindow 弹出窗口的名字（不是文件名），非必须，可用空代替； width=400 窗口宽度； height=300 窗口高度； top=0 窗口距离屏幕上方的象素值； left=0 窗口距离屏幕左侧的象素值； toolbar=no 是否显示工具栏，yes为显示； menubar，scrollbars 表示菜单栏和滚动栏。 resizable=no 是否允许改变窗口大小，yes为允许； location=no 是否显示地址栏，yes为允许； status=no 是否显示状态栏内的信息（通常是文件已经打开），yes为允许； &amp;lt;/SCRIPT&amp;gt; js脚本结束 4.简单的页面加密
　&amp;lt;script LANGUAGE=&amp;quot;javascript&amp;quot;&amp;gt; &amp;lt;!-- function loopy(){ var sWord =&amp;quot;&amp;quot;; while(sWord!=&amp;quot;login&amp;quot;){sWord=prompt(&amp;quot;请输入你的登陆密码&amp;quot;);} alert(&amp;quot;登陆成功！&amp;quot;); } loopy() //--&amp;gt; &amp;lt;/script&amp;gt; 5.拉动页面时背景图不动
　&amp;lt;style&amp;gt; body{background-image:url(logo.</description>
    </item>
    
    <item>
      <title>【转载】Malloc Free与New Delete</title>
      <link>http://www.lovefive.club/post/%E8%BD%AC%E8%BD%BDmalloc-free%E4%B8%8Enew-delete/</link>
      <pubDate>Mon, 19 Oct 2020 13:53:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E8%BD%AC%E8%BD%BDmalloc-free%E4%B8%8Enew-delete/</guid>
      <description>在C语言中，我们已经熟悉利用malloc/free来管理动态内存，而在C++中，我们又有了新的工具：new/delete。你不禁会产生疑问—有了malloc/free为什么还要new/delete 呢？使用malloc/free和使用new/delete又有什么区别呢？首先来分析一下下面的代码片段：
class Object { public: Object() { cout &amp;lt;&amp;lt; &amp;quot;Hello, I was born.&amp;quot; &amp;lt;&amp;lt; endl; } ~Object() { cout &amp;lt;&amp;lt; &amp;quot;Bye, I am died.&amp;quot; &amp;lt;&amp;lt; endl; } void Hello() { cout &amp;lt;&amp;lt; &amp;quot;I am Object.&amp;quot;&amp;lt;&amp;lt;endl; } } ; int main() { cout &amp;lt;&amp;lt; &amp;quot; Using Malloc &amp;amp; Free... &amp;quot;&amp;lt;&amp;lt;endl; Object* pObjectA = (Object*)malloc(sizeof(Object)); pObjectA-&amp;gt;Hello(); free pObjectA; cout &amp;lt;&amp;lt; &amp;quot; Using New &amp;amp; Delete... &amp;quot;&amp;lt;&amp;lt;endl; Object* pObjectB = new Object; pObjectB-&amp;gt;Hello(); delete pObjectB; return 0; } 代码运行的结果为：</description>
    </item>
    
    <item>
      <title>Just as they say</title>
      <link>http://www.lovefive.club/post/just/</link>
      <pubDate>Mon, 05 Oct 2020 23:48:22 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/just/</guid>
      <description>16/9/21  Many hands make light work. foster 培养，促进，助长。 pursuit 追求，职业 productivity 生产力 maintain 维护，保持，坚持 giant 巨人，（tech giant 科技巨头） ···always give top priority to ··· ···总把···放在首位 emphasizes 强调 cohesive 凝聚的，团结的 mutual 相互的（mutual respect 相互尊重） Outstanding leader always give top priority to team building.they know a cohesive team composed of great communicatiors plays an irreplaceable in enhancing the operational efficiency and productivity of an enterprise.Just as they say,many hands make light work.</description>
    </item>
    
    <item>
      <title>【转载】十大经典排序算法（动图演示）</title>
      <link>http://www.lovefive.club/post/%E8%BD%AC%E8%BD%BD%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8A%A8%E5%9B%BE%E6%BC%94%E7%A4%BA/</link>
      <pubDate>Sat, 03 Oct 2020 20:29:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E8%BD%AC%E8%BD%BD%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8A%A8%E5%9B%BE%E6%BC%94%E7%A4%BA/</guid>
      <description>0、算法概述 0.1 算法分类 十种常见排序算法可以分为两大类：
 比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此也称为非线性时间比较类排序。 非比较类排序：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此也称为线性时间非比较类排序。   0.2 时间复杂度 0.3 相关概念  稳定：如果a原本在b前面，而a=b，排序之后a仍然在b的前面。 不稳定：如果a原本在b的前面，而a=b，排序之后 a 可能会出现在 b 的后面。 时间复杂度：对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。 空间复杂度：是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。  1、冒泡排序（Bubble Sort） 冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。
1.1 算法描述  比较相邻的元素。如果第一个比第二个大，就交换它们两个； 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数； 针对所有的元素重复以上的步骤，除了最后一个； 重复步骤1~3，直到排序完成。  1.2 动图演示 1.3 代码实现 function bubbleSort(arr) { varlen = arr.length; for(vari = 0; i &amp;lt; len - 1; i++) { for(varj = 0; j &amp;lt; len - 1 - i; j++) { if(arr[j] &amp;gt; arr[j+1]) { // 相邻元素两两对比 vartemp = arr[j+1]; // 元素交换 arr[j+1] = arr[j]; arr[j] = temp; } } } returnarr; } 2、选择排序（Selection Sort） 选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</description>
    </item>
    
    <item>
      <title>V2rayN的Pac自动模式无法登录Telegram问题！</title>
      <link>http://www.lovefive.club/post/v2rayn%E7%9A%84pac%E8%87%AA%E5%8A%A8%E6%A8%A1%E5%BC%8F%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95telegram%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 05 Sep 2020 18:46:53 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/v2rayn%E7%9A%84pac%E8%87%AA%E5%8A%A8%E6%A8%A1%E5%BC%8F%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95telegram%E9%97%AE%E9%A2%98/</guid>
      <description> 前言：本来全局模式无任何影响，但考虑到有时对国内网站的不友好，所以就换为Pac自动给模式了，但是Tg登录就出了问题。
 小圆圈一直在转⬇ 解决方法:  Settings→Advanced→Connection type→use custom proxy; hostname: 127.0.0.1 port:10808 Save→Close  </description>
    </item>
    
    <item>
      <title>3D地球统计</title>
      <link>http://www.lovefive.club/post/3d%E5%9C%B0%E7%90%83%E7%BB%9F%E8%AE%A1/</link>
      <pubDate>Fri, 27 Mar 2020 18:07:35 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/3d%E5%9C%B0%E7%90%83%E7%BB%9F%E8%AE%A1/</guid>
      <description>QHQ-【问题描述】
3D炫酷的地球统计js
 3D炫酷的地球统计js.地址→ https://www.revolvermaps.com/?target=setupgl(个人推荐)比https://www.revolvermaps.com/?target=setup选择多一点.
 可以直接复制这代码在你网站中,也可以在下面设置一个不一样的,这个是3D的,你也可以选择2D的.
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;//rf.revolvermaps.com/0/0/6.js?i=5d0cxgexeci&amp;amp;amp;m=1&amp;amp;amp;c=ff0000&amp;amp;amp;cr1=ffffff&amp;amp;amp;f=arial&amp;amp;amp;l=0&amp;quot; async=&amp;quot;async&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
  汉化
 </description>
    </item>
    
    <item>
      <title>Living</title>
      <link>http://www.lovefive.club/post/living/</link>
      <pubDate>Fri, 27 Mar 2020 17:18:09 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/living/</guid>
      <description>QHQ-【问题描述】638歌神为你献曲一首！</description>
    </item>
    
    <item>
      <title>Nginx超详细配置及中文解释</title>
      <link>http://www.lovefive.club/post/nginx%E8%B6%85%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 15 Feb 2020 20:58:23 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/nginx%E8%B6%85%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/</guid>
      <description>QHQ-【问题描述】
Nginx的配置文件详解（超详细）
 1、安装Nginx
在安装Nginx之前，需确保系统已经安装了gcc、 openssl-devel、 pcre-devel和zlib-devel软件库。 下面是Nginx安装过程：
wget http://nginx.org/download/nginx-1.0.14.tar.gztar zxvf nginx-1.0.14.tar.gz./configure --with-http_stub_status_module --prefix=/opt/nginxcd nginx-1.0.14makemake installwget http://nginx.org/download/nginx-1.0.14.tar.gz tar zxvf nginx-1.0.14.tar.gz ./configure --with-http_stub_status_module --prefix=/opt/nginx cd nginx-1.0.14 make make install 其中， –with-http_stub_status_module 可以用来启用 Nginx 的 NginxStatus 功能，以监控 Nginx 的运行状态。 想要了解更多的模块的情况可以通过 ./configure –help 选项查看。
2、Nginx的配置文件结构
Nginx的配置文件nginx.conf位于其安装目录的conf目录下。 nginx.conf由多个块组成，最外面的块是main，main包含Events和HTTP，HTTP包含upstream和多个Server，Server又包含多个location：
main（全局设置）、server（主机设置）、upstream（负载均衡服务器设置）和 location（URL匹配特定位置的设置）。
 main块设置的指令将影响其他所有设置； server块的指令主要用于指定主机和端口； upstream指令主要用于负载均衡，设置一系列的后端服务器； location块用于匹配网页位置。  这四者之间的关系式：server继承main，location继承server，upstream既不会继承其他设置也不会被继承。 在这四个部分当中，每个部分都包含若干指令，这些指令主要包含Nginx的主模块指令、事件模块指令、HTTP核心模块指令，同时每个部分还可以使用其他HTTP模块指令，例如Http SSL模块、HttpGzip Static模块和Http Addition模块等。
2.1 Nginx的全局配置
代码如下：
user nobody nobody; worker_processes 2; error_log logs/error.log notice; pid logs/nginx.pid; worker_rlimit_nofile 65535; events{ use epoll; worker_connections 65536; } 每个配置选项的含义解释如下：</description>
    </item>
    
    <item>
      <title>照片要启动gzip吗？</title>
      <link>http://www.lovefive.club/post/%E7%85%A7%E7%89%87%E8%A6%81%E5%90%AF%E5%8A%A8gzip%E5%90%97/</link>
      <pubDate>Sat, 15 Feb 2020 20:58:23 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E7%85%A7%E7%89%87%E8%A6%81%E5%90%AF%E5%8A%A8gzip%E5%90%97/</guid>
      <description>QHQ-【问题描述】
图片要启用gzip压缩吗
 今天在细看nginx配置的时候，发现一个httpGzip模块，图片到底需不需要启用GZip压缩？我搜索一下并总结，图片是不需要启用GZip压缩的（我已经启动全站加速及压缩，完全没必要）。今天，我把此问题写作成文，给大家分析一下为什么图片不需要启用GZip压缩。
图片启用GZip压缩会适得其反
一些开发者使用HTTP压缩那些已经本地已经压缩过的文件，而这些已经压缩过的文件再次被GZip压缩时，是不能提高性能的，表现在如下两个方面。
首先，HTTP压缩需要成本。Web服务器获得需要的内容，然后压缩它，最后将它发送到客户端。如果内容不能被进一步压缩，你只是在浪费CPU做无意义的任务。
其次，采用HTTP压缩已经被过压缩的东西并不能使它更小。事实上，添加标头，压缩字典，并校验响应体实际上使它变得更大，如下图所示：
HTTP压缩过程
你的网站实际上是这样做的吗？是的，它比你想象的更常见。
PNG图片启用GZip压缩的后果
下面这张是启用GZip压缩的PNG图片，看看它的标头信息：
PNG图片启用GZip压缩的后果
不仅浪费了CPU，还增大了图片的体积，之前也写过一篇文章详细分析了《图片GZip压缩后体积变大》，这里再看看图片被GZip压缩的后果：
GZip图片增大了体积
用一句话来结论，那就是图片启用GZip压缩，不仅浪费了CPU，还增大了体积，势必影响服务器性能，影响网站速度。图片要启用gzip压缩吗？绝对不要！
参考一</description>
    </item>
    
    <item>
      <title>什么是负载平衡？</title>
      <link>http://www.lovefive.club/post/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B4%9F%E8%BD%BD%E5%B9%B3%E8%A1%A1/</link>
      <pubDate>Sat, 15 Feb 2020 20:55:54 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B4%9F%E8%BD%BD%E5%B9%B3%E8%A1%A1/</guid>
      <description>QHQ-【问题描述】
什么是负载平衡？负载平衡有什么用？具体功能有什么？具体应用有？未来趋势会怎样？
 概述 随着网络的出现，人们便开始频频使用各种智能设备进行各种精神享受，然而面对庞大的数据流量，各网站的访问十分集中，以致于网络服务器变得很拥挤、速度很慢。面对网络服务器岌岌可危的状况，相关科研人员针对该现象发明了负载均衡器，那么负载均衡器究竟有什么作用呢?接下来就让我们一起来了解关于负载均衡器的问题吧!
什么是负载均衡器  顾名思义，负载均衡器主要采取高端技术――负载均衡技术，它可以利用该技术进行各种灵活的分配计算将全部的网络请求均衡地分布到其他服务器上，通过合理管理每天的网上数据流量来减轻单个服务器上的负担，力求达到使网络访问者享受最佳的联网体验。
  通俗的说： 负载均衡是高可用网络基础架构的关键组件，通常用于将工作负载分布到多个服务器来提高网站、应用、数据库或其他服务的性能和可靠性。
  一个没有负载均衡的 web 架构类似下面这样：   ​	在这里用户是直连到 web 服务器，如果这个服务器宕机了，那么用户自然也就没办法访问了。另外，如果同时有很多用户试图访问服务器，超过了其能处理的极限，就会出现加载速度缓慢或根本无法连接的情况。
而通过在后端引入一个负载均衡器和至少一个额外的 web 服务器，可以缓解这个故障。通常情况下，所有的后端服务器会保证提供相同的内容，以便用户无论哪个服务器响应，都能收到一致的内容。
 ​	从图里可以看到，用户访问负载均衡器，再由负载均衡器将请求转发给后端服务器。在这种情况下，单点故障现在转移到负载均衡器上了。这里又可以通过引入第二个负载均衡器来缓解。
负载均衡器的形式 　负载均衡器的形式可谓是多种多样，除了单纯作为负载均衡器外，有些负载均衡器还可在交换设备中置于网络服务器和互联网之间，而还有的负载均衡器则利用网络适配器将该功能集成至PC当中。
负载均衡器的功能  负载均衡器具有提供服务一致性的功能，负载均衡器通过读取客户端所发出请求内的信息，进行重写报头程序然后将请求发送至合适的服务器上，该服务器会维护着该客户端信息。在http通信当中，负载均衡器提供服务一致性的功能就得到了很好的发挥，但提供该服务的途径并不是非常安全。但若将消息加密后，负载均衡器就无法读取隐藏其中的信息了。 当服务集群中的某个节点无法成功处理请求时，那么该请求就会被发往其他节点上去，当请求成功发至另一节点后，原节点上的请求信息就会自动消失了。 由于所有的客户端请求都会先经过负载均衡器，所以负载均衡器具有统计计量的功能，利用该功能负载均衡器就可以准确统计出各阶段各种流量流动以及各项目进行的次数等，从而网络就可以适当调整系统性能了。  负载均衡器可以处理什么样的请求？ 负载均衡器的管理员能主要为下面四种主要类型的请求设置转发规则：
 HTTP HTTPS TCP UDP  负载均衡器如何选择要转发的后端服务器？ 负载均衡器一般根据两个因素来决定要将请求转发到哪个服务器。首先，确保所选择的服务器能够对请求做出响应，然后根据预先配置的规则从健康服务器池（healthy pool）中进行选择。
因为，负载均衡器应当只选择能正常做出响应的后端服务器，因此就需要有一种判断后端服务器是否「健康」的方法。为了监视后台服务器的运行状况，运行状态检查服务会定期尝试使用转发规则定义的协议和端口去连接后端服务器。如果，服务器无法通过健康检查，就会从池中剔除，保证流量不会被转发到该服务器，直到其再次通过健康检查为止。
负载均衡算法 负载均衡算法决定了后端的哪些健康服务器会被选中。几个常用的算法：
 **Round Robin（轮询）：**为第一个请求选择列表中的第一个服务器，然后按顺序向下移动列表直到结尾，然后循环。 **Least Connections（最小连接）：**优先选择连接数最少的服务器，在普遍会话较长的情况下推荐使用。 **Source：**根据请求源的 IP 的散列（hash）来选择要转发的服务器。这种方式可以一定程度上保证特定用户能连接到相同的服务器。  负载均衡器的应用 　对于网络各个核心部分数据流量增长迅速等问题，单一设备根本承担不住，所以为了加强处理能力，同时也为了提高资源利用，如今很多企业纷纷采取负载均衡技术，简单快捷，为自己的企业减掉很多不必要的麻烦。 如果你的应用需要处理状态而要求用户能连接到和之前相同的服务器。可以通过 Source 算法基于客户端的 IP 信息创建关联，或者使用粘性会话（sticky sessions）。</description>
    </item>
    
    <item>
      <title>Windows下使用Everything搜索</title>
      <link>http://www.lovefive.club/post/windows%E4%B8%8B%E4%BD%BF%E7%94%A8everything%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Sun, 09 Feb 2020 10:10:13 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/windows%E4%B8%8B%E4%BD%BF%E7%94%A8everything%E6%90%9C%E7%B4%A2/</guid>
      <description>QHQ-【问题描述】
全局搜索文件，无内存占据，方便快捷搜索（即时搜索），可集成右键快捷，也可创建组合快捷键。
 Everything的下载安装教程（附带快捷设置） 安装文件夹可按自己意愿更改。 第一个保存设置和数据文件不需要更改设置，NTFS索引选择以管理员身份运行。 Everything快捷键的一些设置。 集成到鼠标右键。 设置组合快捷键。 </description>
    </item>
    
    <item>
      <title>Apache和Nginx简单区分</title>
      <link>http://www.lovefive.club/post/apache%E5%92%8Cnginx%E7%AE%80%E5%8D%95%E5%8C%BA%E5%88%86/</link>
      <pubDate>Tue, 14 Jan 2020 18:44:12 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/apache%E5%92%8Cnginx%E7%AE%80%E5%8D%95%E5%8C%BA%E5%88%86/</guid>
      <description>QHQ-【问题描述】web服务器该选择apache还是nginx
 *一、apache与nginx的区别：*
​ 1、二者最核心的区别在于apache是同步多进程模型，一个连接对应一个进程；nginx是异步的，多个连接（万级别）可以对应一个进程 。nginx处理静态文件好,耗费内存少.但无疑apache仍然是目前的主流,有很多丰富的特性.所以还需要搭配着来.当然如果能确定nginx就适合需求,那么使用nginx会是更经济的方式。
​ 2、nginx的负载能力比apache高很多。最新的服务器也改用nginx了。而且nginx改完配置能-t测试一下配置有没 有问题。
​ 3、apache重启的时候发现配置出错了，会很崩溃，改的时候都会非常小心翼翼现在看有好多集群站，前端nginx抗并发，后端apache集群， 配合的也不错。
​ 4、nginx处理动态请求是鸡肋，一般动态请求要apache去做，nginx只适合静态和反向。
​ 5、从经验来看，nginx是很不错的前端服务器，负载性能很好，nginx，用webbench模拟10000个静态文件请求毫不吃力。 apache对php等语言的支持很好，此外apache有强大的支持网络，发展时间相对nginx更久，bug少但是apache有先天不支持多核心处理负载鸡肋的缺点，建议使用nginx做前端，后端用apache。大型网站建议用nginx自代的集群功能。
​ 6、大部分情况下nginx都优于APACHE，比如说静态文件处理、PHP-CGI的支持、反向代理功能、前端 Cache、维持连接等等。在Apache+PHP（prefork）模式下，如果PHP处理慢或者前端压力很大的情况下，很容易出现Apache进程数 飙升，从而拒绝服务的现象。
​ 7、Apache在处理动态有优势，Nginx并发性比较好，CPU内存占用低，如果rewrite频繁，那还是Apache吧！
​ 8、一般来说，需要性能的web 服务，用nginx 。如果不需要性能只求稳定，那就apache 吧。
二、apache与nginx优缺点比较
1、nginx相对于apache的优点：
轻量级，同样web 服务，比apache 占用更少的内存及资源 ； 抗并发，nginx 处理请求是异步非阻塞的，而apache 则是阻塞型的，在高并发下nginx 能保持低资源低消耗高性能 ； 高度模块化的设计，编写模块相对简单 ； 社区活跃，各种高性能模块出品迅速啊 ； Nginx本身就是一个反向代理服务器 ，Nginx支持7层负载均衡；Nginx可能会比apache支持更高的并发， nginx配置文件写的很简洁，正则配置让很多事情变得简单运行效率高，占用资源少，代理功能强大，很适合做前端响应服务器 ！
2、apache 相对于nginx 的优点：
rewrite ，比nginx 的rewrite 强大 ； 模块超多，基本想到的都可以找到 ； 少bug ，nginx 的bug 相对较多 ； 超稳定 ，Aapche依然是大部分公司的首先，因为其成熟的技术和开发社区已经 也是非常不错的性能。
*三、为什么现在 Nginx 才是 Web 服务器的首选*</description>
    </item>
    
    <item>
      <title>md短代码怎么写</title>
      <link>http://www.lovefive.club/post/md%E7%9F%AD%E4%BB%A3%E7%A0%81%E6%80%8E%E4%B9%88%E5%86%99/</link>
      <pubDate>Thu, 19 Dec 2019 17:15:15 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/md%E7%9F%AD%E4%BB%A3%E7%A0%81%E6%80%8E%E4%B9%88%E5%86%99/</guid>
      <description>QHQ-【问题描述】
刚写了一篇博客，然后发现一个小bug，写的&amp;lt;input&amp;gt;&amp;lt;/input&amp;gt;字段发表出来是个文本输入框，然后看了看 Markdown 基本语句发现。。。。
 如果正常直接在文章中写&amp;lt;input&amp;gt;&amp;lt;/input&amp;gt;，你得到的将会是这样：
所以你需要看一下语法了，发现 &amp;lt; 不是直接输入的，而是需要输入 &amp;amp;lt；，来代替 &amp;lt; ，&amp;gt; 则是 **&amp;amp;gt； **。
所以你可以写**&amp;amp;lt；**input&amp;gt;&amp;lt;/input**&amp;amp;gt； **,这样就是&amp;lt;input&amp;gt;&amp;lt;/input&amp;gt; 。</description>
    </item>
    
    <item>
      <title>Java web 的form表单问题</title>
      <link>http://www.lovefive.club/post/java-web%E7%9A%84form%E8%A1%A8%E5%8D%95%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 19 Dec 2019 16:29:36 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/java-web%E7%9A%84form%E8%A1%A8%E5%8D%95%E9%97%AE%E9%A2%98/</guid>
      <description>QHQ-【问题描述】今天做Java web项目的时候，里面一个功能让我form表单里面套表单了，但是里面的form 提交action中参数无效。直接action外层form，所以就记录下form表单的一些问题。
 Form表单提交数据（Java web） java web 两个表单form怎么设置两个提交？也可以是一表单form，多提交。Acton只能有一个submit提交，在设置一个submit还是action外层form。
所以怎么来用两个submit来指向不同的响应呢？
一、使用formmethod和formaction属性 在使用里面使用type=&amp;ldquo;submit&amp;rdquo; formmethod=&amp;ldquo;get&amp;rdquo; formaction=&amp;ldquo;&amp;ldquo;即可。具体如下：
&amp;lt;form action=&amp;#34;query.do&amp;#34; method=&amp;#34;post&amp;#34; align=&amp;#34;center&amp;#34;&amp;gt; &amp;lt;table border=&amp;#34;1&amp;#34; align=&amp;#34;center&amp;#34; text-align:center&amp;#34;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&amp;lt;%=book.getBookName()%&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;&amp;lt;%=book.getPrice()%&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;&amp;lt;%=book.getAuthor()%&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;&amp;lt;%=book.getBr()%&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;&amp;lt;%=book.getCounts()%&amp;gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; &amp;lt;form action=&amp;#34;edit.do?Id=&amp;lt;%=book.getId()%&amp;gt;&amp;#34; method=&amp;#34;get&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;counts&amp;#34; name=&amp;#34;counts&amp;#34;width:50px&amp;#34; &amp;gt; &amp;lt;input type=&amp;#34;hidden&amp;#34; id=&amp;#34;Id&amp;#34; name=&amp;#34;Id&amp;#34; value=&amp;#34;&amp;lt;%=book.getId()%&amp;gt;&amp;#34; style=&amp;#34;width: 0px&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;submit&amp;#34; formmethod=&amp;#34;get&amp;#34; formaction=&amp;#34;edit.do?Id=&amp;lt;%=book.getId()%&amp;gt;&amp;#34; value=&amp;#34;修改&amp;#34;&amp;gt;//调用edit方法，方式为get，（也可以修改为post，看自己需要） 	&amp;lt;/form&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td colspan=&amp;#34;7&amp;#34;&amp;gt;&amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;查询&amp;#34; /&amp;gt;&amp;lt;/td&amp;gt;//调用qurry方法，方式为GET 	&amp;lt;/tr&amp;gt; &amp;lt;/table&amp;gt; &amp;lt;/form&amp;gt; 二、设置不同函数，使用onclick属性 1、表单中设置两个提交按钮：加密、解密；点击后分别调用不同的方法 &amp;lt;s:form id=&amp;#34;Form&amp;#34; action=&amp;#34;&amp;#34; namespace=&amp;#34;/&amp;#34;&amp;gt; &amp;lt;button onclick=&amp;#34;encrypt()&amp;#34;&amp;gt;加密&amp;lt;button&amp;gt; &amp;lt;button onclick=&amp;#34;decrypt()&amp;#34;&amp;gt;解密&amp;lt;/button&amp;gt; &amp;lt;s:form&amp;gt; 2、在不同的函数中设置要提交的地址 &amp;lt;script&amp;gt; //点击加密按钮调用此方法 function encrypt(){ //跳转到encrypt.</description>
    </item>
    
    <item>
      <title>Win10无限刷新</title>
      <link>http://www.lovefive.club/post/win10%E6%97%A0%E9%99%90%E5%88%B7%E6%96%B0/</link>
      <pubDate>Mon, 16 Dec 2019 19:58:15 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/win10%E6%97%A0%E9%99%90%E5%88%B7%E6%96%B0/</guid>
      <description>QHQ-【问题描述】
​	怎么样修复Win10系统 ，win10在选择默认应用就是更改不了，重置也没有反应，打开一个包含html文件的文件夹，桌面就无限刷新
 win10无限刷新  我在使用电脑的时候，忽然发现我打开一个文件夹，桌面在无限刷新，于是就检查一下，发现是包含.html的文件夹都会造成这个无限刷新的bug。于是寻找解决办法。有以下两种：
 方法一：利用文件检查工具修复 右击开始图标（电脑左下角的小图标），出现下面界面，点击管理员的Windows powerShell：
然后输入sfc /scannow ，回车运行。
方法二：即设置注册页来设置回到原始设置。 先Win+R 打开运行界面，输入regedit，确定运行。
接着按着箭头所指一步步走。
都是左击，然后确定。
选择完全控制，然后点击确定。
之后就是确定，确定。。。（可能会反应一下，看自己电脑反应速度，我的是反应了两秒就好了），然后重启，即可。
 补充： 如果第二点还没有反应，可以从控制面板→程序→默认程序→设置默认程序，自己再调整一下默认应用，也可以根据文件后缀名调整默认打开程序。</description>
    </item>
    
    <item>
      <title>奶牛快传</title>
      <link>http://www.lovefive.club/post/%E5%A5%B6%E7%89%9B%E5%BF%AB%E4%BC%A0/</link>
      <pubDate>Wed, 11 Dec 2019 20:33:04 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%A5%B6%E7%89%9B%E5%BF%AB%E4%BC%A0/</guid>
      <description>QHQ-【问题描述】
告别百度云，云盘等限速下载，了解免费无限流下载神器-奶牛快传。
奶牛快传 冲击波 重点一：APP新上线(2019.11.11)、新用户注册可获得永­久云盘空间10 GB.（可惜只限苹果用户！可能安卓没有过审吧，真实原因咱也不可能知道。） 重点二：无速度限制，完全依托于用户本地网络的带宽。 重点三：文件安全性可靠，主要采取“回源验证+加密+时间戳验证”的措施，以保证文件安全并不可盗链。 重点四：操作界面极简，具备创意感较强的视觉风格。 重点五：分享便捷，有下载链接、二维码及小程序码。 重点六：不强制注册登陆 重点七：支持无限额的大文件快速传输 重点八：免费！！！！
官方说明： *目前传统的文件传输、云存储工具基本上或多或少有着上传或者下载速度受限、强制登录等其他限制，这样一来使用时间成本很高，使用体验欠佳，大大降低了使用效率。*  奶牛快传就是从「传文件」这个普通的日常行为的痛点中出生的。在文件传输服务2016年上线以来，吸纳了大量来自全球的学生、广告创意、设计行业及互联网相关公司的用户。奶牛快传的操作界面极简，界面中心只留了一个大按钮，添加文件后，文件会被快速上传，随后跳出该文件的下载链接、二维码及小程序码。整个上传过程只需要2-3次交互。 无论是上传还是下载，我们都没有速度限制，完全依托于用户本地网络的带宽
$$ 8Mbps /秒	14Mbps /秒	140+/国 上传速度	下载速度	用户分布 *以上数据基于至少百兆带宽环境 $$ ​	从文件安全性的角度出发，我们主要采取“回源验证+加密+时间戳验证”的措施，以保证文件安全并不可盗链。一方面用户可以给文件加设密码，另一方面我们只对文件做短时间留存。 （当然我也听消息称它们正在和七牛云进行深度合作，想使用七牛云的AI鉴黄鉴暴服务，甄别非法内容。）
假如你遇到这样一个情况：你现在有个文件，它既不大也不小（就是很尴尬，就是大咱也不怕），压缩之后大概500M，装着的资料既不算非常私密也不是在网上随意能找到的。你有一个朋友，既不能说他不会用电脑，也不像各位大佬随意鼓捣各种黑科技，却与你有千里之遥，那么请问：如何快速的分享给他呢。
最常用的几个方法下载上传分享文件： 1.百度云/微云等云盘共享：  现在国内云盘生态基本上是百度限速其他限量，用其他云盘占自己的空间不说假如云盘需要登录而你的朋友又正好没注册这个云盘，如果是个了解计算机的还好说，要是真的是个小白，注册个账户估计都要大半天，你来指导又要浪费无用时间。百度网盘的话，除非你和他都用破解客户端、多线程下载（现在更新都很快，很多都不稳定，一不小心就被封了，慎用！！！）或者都开了超级会员（有钱，都学计算机，怎么可能在这种下载上花钱呢!），否则下载速度你懂的。除非你朋友是‘豪’，你们要浪费大把时间在上传下载上。网盘设计的目的本来就是长期存储而不是分享，自然不太可能成为第一选择。
 2.邮件发送：  这是个对小文件来说很方便的方案，只可惜我们这个文件有点大了，一般的邮箱只接受最大50mb的附件。的确很多邮件平台提供了其他超大附件的解决方案，但是很多超大附件都只在自己平台内使用比较实用，基本没有用过。
 3.QQ文件传输/迅雷快传等传输工具：  说实话这已经算是比较优秀的选择了，不过首先QQ的文件传输很明显是有限速的，一般情况下在300-1000k/s左右（这已经很仁慈了），个别恶心人的时候甚至可以和百度云争高下（以b/s的速度让你绝望）。并且使用QQ的前提是你们都得有QQ客户端的（当然如果你传输文件用的是Tim，可能会有一些加速，但也需要双方都是Tim的情况下），虽然这不是什么难事但是假设你朋友在工作单位结果正好没下QQ…&amp;hellip;好吧真的浪费时间。同样的还有迅雷快传之类的工具，速度什么的讨厌迅雷没用过，不过需要依托特定的软件这点肯定逃不掉。
 4.idm和ne等多线程下载器：  如果可以的话对于学计算机且了解这方面的人来说，这种选择也不尽失为一种很好的方法了，但刚开始的安装，搭建，调试也是让人头疼的（大佬跳过）。
 ​ 综上所述，限制我们在网上传输文件的无非以下几个要素：传输速度、兼容性以及方便程度。那么有没有一个平台能解决以上三者呢？那就得说说本文的主角：奶牛快传。
​	奶牛快传 (CowTransfer) 是一款免费、无需注册即可直接使用的网页端（现在也有app了，可能不久后安卓也会出现）大文件临时传输网盘服务，它提供了网页版以及微信小程序，可以非常方便快速地给自己或他人传输文件。
​	奶牛快传“借鉴”了国外的 wetransfer.com，不过由于服务器在国内并且使用了 CDN，不会限制速度，因此上传下载速度都极快！实测下载轻松超过 10MB/s，速度绝对秒杀百度以及众多对手，使用体验相当好。 ​ ​	对于注册用户，它不限制传输文件的大小！你可以用它轻松发送大文件，最多可保留 7 天；未注册用户则可最大传输 2GB 文件（2G不小了吧，不然注册一下5G绝对可以吃香喝辣），可以保留 3 天；因此，用奶牛来传输大文件相当不错！</description>
    </item>
    
    <item>
      <title>在人间凑数的日子（三）</title>
      <link>http://www.lovefive.club/post/%E5%9C%A8%E4%BA%BA%E9%97%B4%E5%87%91%E6%95%B0%E7%9A%84%E6%97%A5%E5%AD%90%E4%B8%89/</link>
      <pubDate>Fri, 06 Dec 2019 14:53:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%9C%A8%E4%BA%BA%E9%97%B4%E5%87%91%E6%95%B0%E7%9A%84%E6%97%A5%E5%AD%90%E4%B8%89/</guid>
      <description>在人间凑数的日子（三）  终于长到能与父亲碰杯的年纪，
却没能成为他的骄傲。
  后来才发现，
那并不是属于我的花，
我只是途经她的绽放。
  曾以为贫穷是指饥饿，
衣不附体，现在才懂得，
它是孤独与无人问津。
  散伙是人间常态，
我们又不是什么例外。
  一直想做一个特别的人，
现在我做到了，
我特别的无助，特别的难过。
  有时候也挺佩服自己，
能咽下一肚子的话和心酸。
  条条大路通罗马，
可有的人就出生在罗马。
  曾经有一个女孩儿追我，被我拒绝了，
我没车没房，
她不懂事，可我不能。
  所谓眉间的故事，
不是喜欢就是辜负。
  后来我发现这世界真的很大，
没有刻意见面，
这辈子就再也见不到了。
  成熟，就是看以前的自己像个笨蛋。
  自你走后，
好像不开心了好多年，
原来不开心也可以成为习惯。
  回了趟故乡，
故乡的气候一直没变，
只是我却像个旅人。
  请不要用你那微不足道的成绩，
来对我指指点点，
因为我不配。
 </description>
    </item>
    
    <item>
      <title>在人间凑数的日子（二）</title>
      <link>http://www.lovefive.club/post/%E5%9C%A8%E4%BA%BA%E9%97%B4%E5%87%91%E6%95%B0%E7%9A%84%E6%97%A5%E5%AD%90%E4%BA%8C/</link>
      <pubDate>Fri, 06 Dec 2019 14:23:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%9C%A8%E4%BA%BA%E9%97%B4%E5%87%91%E6%95%B0%E7%9A%84%E6%97%A5%E5%AD%90%E4%BA%8C/</guid>
      <description>在人间凑数的日子（二）  ​	年轻不懂爱情与友情，
​	长大后才懂得爱情是那么不容易，
​	友情是那么的脆弱。
  生活从来都是这样，
不把我放在眼里。
  ​ 你羡慕的生活背后，
​	都是你熬不起的苦。
  ​ 自己都是满身灰暗，
​	还总想给别人一些光。
  ​ 不要假装努力，
​	因为结果不会陪你演戏，
​	行为在于自己，未来依旧可期。
  ​ 微笑并不代表快乐，
​	那只是一种表情。
  ​	你试图以离开引起别人的注意，
​	却不知道你是真的离开了，
​	并没有任何人记住你。
  ​	小时候总觉得要做什么样的人，
​	绝不能像某些人一样，
​	长大后，却成了当初最讨厌的人。
  ​	大事办不了，
​	小事不爱办。
  ​	很多道理我都懂，
​	结果无能想到也只能接受，
​	但是，我就是难受。
  ​	好看的皮囊你玩不起，</description>
    </item>
    
    <item>
      <title>在人间凑数的日子（一）</title>
      <link>http://www.lovefive.club/post/%E5%9C%A8%E4%BA%BA%E9%97%B4%E5%87%91%E6%95%B0%E7%9A%84%E6%97%A5%E5%AD%90%E4%B8%80/</link>
      <pubDate>Fri, 06 Dec 2019 13:53:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%9C%A8%E4%BA%BA%E9%97%B4%E5%87%91%E6%95%B0%E7%9A%84%E6%97%A5%E5%AD%90%E4%B8%80/</guid>
      <description>在人间凑数的日子（一）  鱼和熊掌不可兼得，
唯独穷和单身可以。
  爷爷没有输给战火，
父亲没有输给贫穷，
我却输给了和平年代的生活和爱情，以及太过自由。
  我不记得小时候的梦想了，
但绝对不是买一套房子。
  感觉什么都不缺，
却又好像什么都没有。
  以为为是的深情，
一厢情愿的热情。
  老说找不到理想中的另一半，
问问自己，成为理想中的自己了吗？
  世界很美好，
能让两个毫无关系的人走到一起，
世界也很残酷，
硬生生让两个相爱的人再没有未来。
  活着，就是一个接着一个的妥协。
  嫉妒使我面目全非，
暗恋让我卑微入骨。
  自幼以为会有一番作为，衣锦还乡，
现在想想，
只希望父母在家过的好。
  有些事只适合烂在心里，
无声无息的忘记。
  我到底经历了什么？
才能收起暴躁的脾气和骄傲。
 </description>
    </item>
    
    <item>
      <title>Hexo 博客回顾</title>
      <link>http://www.lovefive.club/post/%E5%B9%B2%E6%8E%89bashhexocommand-not-found/</link>
      <pubDate>Mon, 25 Nov 2019 12:12:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%B9%B2%E6%8E%89bashhexocommand-not-found/</guid>
      <description>好久没动过 Hexo 博客了，都是在用halo博客,今天准备一起更新的时候输入 hexo new linving新建时，报错 bash: hexo: command not found，忽然不知道咋回事了,就想到前不断时间重置电脑了,可能一些配置都没有了,就检查一下,并完美解决了!  若是git也没有的,请先下载git,可以选择这个链接下载git(Git-2.26.0-64-bit)和node(node-v12.16.1-x64).
  https://www.lanzous.com/b00zckh7c 密码:7r7z
 一、检查node和npm是否正常.不正常就先下载,若正常直接跳转第四步. 二、选择node下载.  推荐https://nodejs.org/en/download/官网直接下载.
  也可以选择上面的打包下载(git和node).下载和傻瓜式安装就可,安装完成时环境配置也一起好了.
  我们可以看到环境变量中已经包含了E:\node\
 三、检查Node.js和npm版本 ​	安装完node需重新打开git.下面是我重新打开后,想直接建立新文件,但是没有成功,但是node和npm都OK.
发现虽然有了版本信息又证明 nodejs 和 npm 是没有问题的，但还是没有建立成功,那么就应该是环境变量的配置问题了.
四、配置环境变量 【CTRL】+【E】打开文件资源管理器,在左侧栏中选择【此电脑】右键【属性】，依次选择【高级系统设置】-【环境变量】，选择系统变量 Path，将 node_modules 下的 .bin 文件路径添加到 Path 里面.
环境变量添加好了之后重新打开 git 即可运行 hexo 命令 即可！
五、如以上都不行,请卸载hexo重新安装. 运行命令 npm install hexo-cli -g 重新安装 hexo ！</description>
    </item>
    
    <item>
      <title>Bat批修改文件后缀名</title>
      <link>http://www.lovefive.club/post/bat%E7%AE%80%E5%8D%95%E6%89%B9%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/bat%E7%AE%80%E5%8D%95%E6%89%B9%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</guid>
      <description>今天先说说bat最简单的操作 ren *.jpg *.txt  此语句可以把当前文件夹的所有jpg照片转换为txt格式，（有利于隐藏照片哦）。
 接下来就简单来说一下怎么具体操作吧  新建txt文本 在里面填写上面语句 修改txt后缀名为bat   提示：.jpg 意思是任意文件名的jpg格式，当然也可以.* ，表示任意文件文件格式，第二个*.txt意思是任意任意文件名的最终格式。就是原文件名不变，只修改后缀名。（后缀名可以根据自己的要求自己更改）。
   未完待续。。。  </description>
    </item>
    
    <item>
      <title>C&#43;&#43;半数集问题</title>
      <link>http://www.lovefive.club/post/%E5%8D%8A%E6%95%B0%E9%9B%86/</link>
      <pubDate>Fri, 25 Oct 2019 13:53:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%8D%8A%E6%95%B0%E9%9B%86/</guid>
      <description>QHQ-【问题描述】给定一个自然数n，由n开始可以依次产生半数集set(n)中的数如下：
（1）n∈set(n);
（2）在n的左边加上一个自然数，但该自然数不能超过最近添加的数的一半；
（3）按此规则进行处理，直到不能再添加自然数为止。
  【问题描述】给定一个自然数n，由n开始可以依次产生半数集set(n)中的数如下： （1）n∈set(n); （2）在n的左边加上一个自然数，但该自然数不能超过最近添加的数的一半； （3）按此规则进行处理，直到不能再添加自然数为止。 例如，set(6)={6,16,26,126,36,136}。半数集set（6）中有6个元素。注意，该半数集是多重集。 【算法设计】对于给定的自然数n，计算半数集set(n)中的元素个数。 【输入形式】只有1行，给出整数n（0&amp;lt;n&amp;lt;1000）。 【输出形式】只有1行，给出半数集set(n)中的元素个数。 【样例输入】 6 【样例输出】 6   #include&amp;lt;iostream&amp;gt; using namespace std; int my_set(int n) { int set_count = 1; if (n == 1) return 1; else { int i = 1; while (i &amp;lt;= (n / 2)) { set_count = set_count + my_set(i); i++; } return set_count; } } int main() { int n = 0; cin &amp;gt;&amp;gt; n; cout &amp;lt;&amp;lt; my_set(n); } </description>
    </item>
    
    <item>
      <title>C&#43;&#43;众数问题</title>
      <link>http://www.lovefive.club/post/%E4%BC%97%E6%95%B0%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 21 Oct 2019 20:12:12 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E4%BC%97%E6%95%B0%E9%97%AE%E9%A2%98/</guid>
      <description>QHQ-【问题描述】给定含有S个元素的多重集合S，每个元素在S中出现的次数称为该元素的重数。多重集S中重数最大的元素称为众数。例如，S={1,2,2,2,3,5}。多重数S的众数是2，其重数为3 。
 ``` 【问题描述】给定含有S个元素的多重集合S，每个元素在S中出现的次数称为该元素的重数。多重集S中重数最大的元素称为众数。例如，S={1,2,2,2,3,5}。多重数S的众数是2，其重数为3 。 【算法设计】对于给定的由n个自然数组成的多重集S，计算S的众数及其重数。 【输入形式】第1行为多重数集S中元素个数n；接下来的n行中，每行有一个自然数。 【输出形式】输出文件有2行，第1行是众数，第2行是重数。 【样例输入】 6 1 2 2 2 3 5 【样例输出】 2 3 ```   ``` #include&amp;lt;iostream&amp;gt; #include&amp;lt;algorithm&amp;gt; using namespace std; #define MAXINT 10000 int main() { int n = 0; cin &amp;gt;&amp;gt; n; int a[MAXINT] = { 0 }; for (int i = 0; i &amp;lt; n; i++) { cin &amp;gt;&amp;gt; a[i]; } sort(a, a + n); int maxcount = 0; int maxcount_index = 0; int temp = 1; int b[MAXINT] = { 0 }; b[0] = a[0]; int b_index = 1; bool flag = false; for (int i = 0; i &amp;lt; (n - 1); i++) { if (a[i] !</description>
    </item>
    
    <item>
      <title>C&#43;&#43;最大间隙</title>
      <link>http://www.lovefive.club/post/%E6%9C%80%E5%A4%A7%E9%97%B4%E9%9A%99/</link>
      <pubDate>Mon, 21 Oct 2019 13:53:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E6%9C%80%E5%A4%A7%E9%97%B4%E9%9A%99/</guid>
      <description>QHQ-【问题描述】给定n个实数x1,x2,&amp;hellip;,xn, 求着n个数在实轴上相邻两个数之间的最大差值。假设对任何实数的下取整函数好事O(1), 设计解最大间隙问题的线性时间算法。
 【问题描述】给定n个实数x1,x2,...,xn, 求着n个数在实轴上相邻两个数之间的最大差值。假设对任何实数的下取整函数好事O(1), 设计解最大间隙问题的线性时间算法。 算法设计：对于给定的n个实数x1,x2,...,xn，计算它们的最大间隙。（只有一位小数） 【输入形式】第一行有1个正整数n（n不超过10），接下来的1行有n个实数x1,x2,...,xn，中间用空格隔开。 【输出形式】输出找到的最大间隙 【样例输入】 5 2.3 3.1 7.5 1.5 6.3 【样例输出】3.2（保留一位小数） #include&amp;lt;iostream&amp;gt; #include&amp;lt;iomanip&amp;gt; using namespace std; const int MAX = 200001; double num[MAX]; bool run() { int n; if (scanf_s(&amp;quot;%d&amp;quot;, &amp;amp;n) == EOF) return false; int i; double max = 0.0, min = INT_MAX; for (i = 0; i &amp;lt; n; i++) { scanf_s(&amp;quot;%lf&amp;quot;, &amp;amp;num[i]); if (num[i] &amp;gt; max) max = num[i]; if (num[i] &amp;lt; min) min = num[i]; } int* cnt = new int[n]; double* low = new double[n]; double* high = new double[n]; for (i = 0; i &amp;lt; n; i++) { cnt[i] = 0; low[i] = max; high[i] = min; } double ave = (max - min) / (n - 1); for (i = 0; i &amp;lt; n; i++) { int tmp = (int)((num[i] - min) / ave); cnt[tmp]++; if (num[i] &amp;gt; high[tmp]) high[tmp] = num[i]; if (num[i] &amp;lt; low[tmp]) low[tmp] = num[i]; } double t = high[0], res = 0.</description>
    </item>
    
    <item>
      <title>C&#43;&#43;金币阵列</title>
      <link>http://www.lovefive.club/post/%E9%87%91%E5%B8%81%E9%98%B5%E5%88%97/</link>
      <pubDate>Mon, 21 Oct 2019 13:53:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E9%87%91%E5%B8%81%E9%98%B5%E5%88%97/</guid>
      <description>QHQ-【问题描述】有m*n(m&amp;lt;=100, n&amp;lt;=100)枚金币在桌面上排成一个m行n列的金币矩阵。每枚金币或正面朝上或背面朝上。用数字表示金币状态，0表示金币正面朝上，1表示金币背面朝上。
金币矩阵游戏的规则是：1.每次可将任一行金币翻转过来放在原来的位置上；2.每次可任选2列，交换着2列金币位置。
算法设计：给定金币阵列的初始状态和目标状态，计算按金币游戏规则，将金币阵列从初始状态转换到目标状态所需要的最小变换次数。
 ``` 问题描述】有m*n(m&amp;lt;=100, n&amp;lt;=100)枚金币在桌面上排成一个m行n列的金币矩阵。每枚金币或正面朝上或背面朝上。用数字表示金币状态，0表示金币正面朝上， 1表示金币背面朝上。 金币矩阵游戏的规则是：1.每次可将任一行金币翻转过来放在原来的位置上；2.每次可任选2列，交换着2列金币位置。 算法设计：给定金币阵列的初始状态和目标状态，计算按金币游戏规则，将金币阵列从初始状态转换到目标状态所需要的最小变换次数。 【输入形式】第1行有2个正整数m和n，用#隔开。以下m行是金币阵列的初始状态，每行有n个数字表示该行金币的状态，0表示正面朝上，1表示背面朝上。接着的m行是金币阵列的目标状态，不用#隔开 。 【输出形式】输出计算出的最小变化次数。相应数据无解是，输出-1 。 【样例输入】 4#3 101 000 110 101 101 111 011 101 【样例输出】2 ```   ``` #include &amp;lt;fstream&amp;gt; #include &amp;lt;iostream&amp;gt; using namespace std; const int size1 = 100; int k, n, m, ccount, best; int b0[size1 + 1][size1 + 1], b1[size1 + 1][size1 + 1], b[size1 + 1][size1 + 1]; bool found; void stringToInt(string str,int&amp;amp; n,int&amp;amp; m) { int len = str.</description>
    </item>
    
    <item>
      <title>C&#43;&#43;分割输入字符串</title>
      <link>http://www.lovefive.club/post/%E5%88%86%E5%89%B2%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Wed, 16 Oct 2019 20:12:12 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%88%86%E5%89%B2%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>QHQ-It was day full of memories
C++字符串分割 C++没有split分割的函数！！！！  C++没有c语言的那样方便的格式化输入，像c语言你如果想一次性输入1#2，而分别把1和2赋值给x和y，你可以这样： scanf(&amp;quot;%d#%d&amp;quot;,&amp;amp;x,&amp;amp;y); 当然你也可以自己定义一个方法来实现这个想法。
 ``` #include &amp;lt;iostream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cstddef&amp;gt; #include &amp;lt;vector&amp;gt; using namespace std; namespace strg { //函数模板 template&amp;lt;typename Container&amp;gt; inline std::size_t strtok(std::string&amp;amp; str, Container&amp;amp; cont, const std::string defstr = &amp;quot; &amp;quot;) { cont.clear(); std::size_t size = 0; std::size_t begpos = 0 ; std::size_t endpos = 0 ; begpos = str.find_first_not_of(defstr); while (begpos != std::string::npos) { size++; endpos = str.</description>
    </item>
    
    <item>
      <title>第一次测试尝试！</title>
      <link>http://www.lovefive.club/post/first-test/</link>
      <pubDate>Wed, 16 Oct 2019 20:12:12 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/first-test/</guid>
      <description>QHQ-This is a nice day
Why Blog 对博客的理解 喜欢写Blog的人，会经历三个阶段。
 第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。
  第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。
  第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。
 我们每个人的在网络上产生的数据越来越多，这些信息是我们在互联网上存在过的痕迹，值得我们认真对待。但是它们被分散分布在各个网站上。很多时候我们很难将它们聚合在一起，而且各个网站的信息排布方式也没有办法自由控制，所以我们需要一个可以由自己主宰的空间——博客。
通过博客，我们可以记录自己的生活和成长的轨迹。它不像 Twitter 那样碎片化，也不像 Facebook 那样关系化，它是私人的空间。
关于巴尔 巴尔郝图 是小柒（戚浩强）的个人站。
 一盏灯， 一片昏黄； 一简书， 一杯淡茶。 守着那一份淡定， 品读属于自己的寂寞。 保持淡定， 才能欣赏到最美丽的风景！ 保持淡定， 人生从此不再寂寞。
 一盏灯， 一片昏黄；一简书， 一杯淡茶。 守着那一份淡定， 品读属于自己的寂寞。 保持淡定， 才能欣赏到最美丽的风景！ 保持淡定， 人生从此不再寂寞。
   Tables Are Cool     col 3 is right-aligned $1600   col 2 is centered $12   zebra stripes are neat $1    </description>
    </item>
    
    <item>
      <title>Python_分娩数据集处理</title>
      <link>http://www.lovefive.club/post/python_%E5%88%86%E5%A8%A9%E6%95%B0%E6%8D%AE%E9%9B%86%E5%A4%84%E7%90%86/</link>
      <pubDate>Thu, 10 Jan 2019 16:29:25 +0800</pubDate>
      
      <guid>http://www.lovefive.club/post/python_%E5%88%86%E5%A8%A9%E6%95%B0%E6%8D%AE%E9%9B%86%E5%A4%84%E7%90%86/</guid>
      <description>Python分娩数据集处理_2019  目录 一、 简介
1.1、数据集摘要
1.2、资料来源
1.2.1、网址:
1.2.2、来源机构：
1.2.3、分析前资料理解：
1.3、分析目标及方法：
二、 数据读取
2.1、数据读取方法
2.2、读取的结果
2.3、数据简单概要描述
三、 数据预处理
3.1、分析数据现状，明确问题
3.2、预处理方法及结果
3.2.1、数据清洗
3.2.2、数据变换
四、 用分类模型实现分娩分析
4.1、分析目标
4.2、分析方法及结果
4.2.1、准备工作
4.2.2、详细步骤
五、 结论与展望
5.1、结论及局限性
5.2、过程感悟及展望
一、 简介 1.1、数据集摘要 此数据集包含有关 80 名孕妇的剖腹产结果的信息，这些孕妇在医疗领域具有最重要的分娩问题特征：
   名称 （Name） 分娩情况分类数据集数据集 (Caesarian Section Classification Dataset Data Set)     特征简介 （Feature introduction） 整数（Integer）   记录数（Record number） 80/6（Eighty/Six）   分析目标 （Analysis target） 分娩情况（是否剖腹产）与年龄、分娩次数、分娩时间、血压、心脏状况有无准确联系 （Is there any accurate relationship between delivery and age, delivery times, delivery time, blood pressure and heart condition）   分析思路及方法（Analysis ideas and methods） 收集多数信息，分析计算其中是否有准确联系 （Collect most information, analyze and calculate whether there is an accurate connection）    1.</description>
    </item>
    
    <item>
      <title>Hexo主题的一些踩过的坑</title>
      <link>http://www.lovefive.club/post/%E5%85%B3%E4%BA%8Ehexo%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/</link>
      <pubDate>Sun, 25 Nov 2018 12:55:21 +0000</pubDate>
      
      <guid>http://www.lovefive.club/post/%E5%85%B3%E4%BA%8Ehexo%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/</guid>
      <description>Hexo主题的一些踩过的坑 一、主题选择问题  首先你需要在官网hexo选择你喜欢的主题。主要下载步骤有：Hxeo+Github pages。
 二、绑定域名问题  每一次推送都会把你在setting设置的域名给覆盖，让你每一次都需要重新绑定一些域名，很麻烦。
所以我就上网搜索与尝试，找到解决方法，首先在你hexo根目录找到source目录，先新建*.txt*文件，在里面写入你要绑定的域名。再重命名为*CNAME*，删除后缀名。使其没有后缀名，类型为文件。然后在github的setting里设置一次（保险设置一次，不设置也行）。
 三、主题内容更改  在这只说一些我自己碰到的，基本上一般的坑网上都有详细教程。
3.1、标题，作者和文字的更换 ​	基本上在hexo的根目录下的*_config.yml*文件就可以更改了。注意：冒号后面需要空一格，不然会报错。默认语言为en，中文为zh—CN（有需要可以更改，一般不变）。
3.2、js特效的更换添加 ​	比如我的添加点击显示文字的特效：
​	以我选择miho主题为例，先添加点击显示文字的js（目录为..\themes\miho\source\js\click_show_text.js**）click_show_text.js**：
var a_idx = 0; jQuery(document).ready(function($) { $(&amp;quot;body&amp;quot;).click(function(e) { var a = new Array (&amp;quot;富强&amp;quot;, &amp;quot;民主&amp;quot;, &amp;quot;文明&amp;quot;, &amp;quot;和谐&amp;quot;, &amp;quot;自由&amp;quot;, &amp;quot;平等&amp;quot;, &amp;quot;公正&amp;quot;, &amp;quot;法治&amp;quot;, &amp;quot;爱国&amp;quot;, &amp;quot;敬业&amp;quot;, &amp;quot;诚信&amp;quot;, &amp;quot;友善&amp;quot;);//文字自己填写所想要的 var $i = $(&amp;quot;&amp;lt;span/&amp;gt;&amp;quot;).text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css({ &amp;quot;z-index&amp;quot;: 5, &amp;quot;top&amp;quot;: y - 20, &amp;quot;left&amp;quot;: x, &amp;quot;position&amp;quot;: &amp;quot;absolute&amp;quot;, &amp;quot;font-weight&amp;quot;: &amp;quot;bold&amp;quot;, &amp;quot;color&amp;quot;: &amp;quot;#FF0000&amp;quot; }); $(&amp;quot;body&amp;quot;).</description>
    </item>
    
  </channel>
</rss>
